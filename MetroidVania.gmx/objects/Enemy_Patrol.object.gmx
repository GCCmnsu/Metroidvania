<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Enemy</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>Enemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>direction = 0;
enemy_hspeed = 2.5
enemy_health = 20;

//Shooting control logic
cannon_is_on = false; //false if off, true if on
cannon_refire_rate = 20; //refire timer for cannon
cannon_sight_radius = 300;
cannon_can_fire = true; //if cannon is reloaded

projectile_speed = 8
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>cannon_can_fire = true
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement logic

if(direction==0) //if going right
    {
    if(!place_meeting(x + enemy_hspeed,y,Wall)) //no wall in way
        {
        if(collision_rectangle(x,y+3,x+enemy_hspeed,y+3,Patrol_Path,true,false))
        {
        x += enemy_hspeed;
        }
    else
        {
        direction = 180; //reverse direction
        }
    }
else
    {
    direction = 180; //reverse direction
    }
}


if(direction==180) //if going left
    {
    if(!place_meeting(x - enemy_hspeed,y,Wall)) //no wall in way
        {
        if(collision_rectangle(x,y+3,x-enemy_hspeed,y+3,Patrol_Path,true,false))
        {
        x -= enemy_hspeed;
        }
    else
        {
        direction = 0; //reverse direction
        }
    }
else
    {
    direction = 0; //reverse direction
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///shooting logic

if cannon_is_on and cannon_can_fire
    {
    //check if player in radius
    var tempid = collision_circle(x,y,cannon_sight_radius,Player,false,true)
    var xx, yy;
    
    if tempid
        {
        //draw sight line to it
        direction = point_direction(x,y-16,(tempid).x,(tempid).y-16)
        xx = x + lengthdir_x(9,direction)
        yy = y - 16 + lengthdir_y(9,direction)
        if !collision_line((tempid).x,(tempid).y - 16,xx,yy,Wall,true,true)
            {
            //fire cannon
            var plasma_id = (instance_create(xx,yy,Plasma));
            plasma_id.direction = direction;
            plasma_id.speed = projectile_speed;
            
            //refire stuff
            cannon_can_fire = false;
            alarm[0] = cannon_refire_rate
            }
        
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="Player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.player_iframes == 0
    {
    with(other)
        Damage_Player(1,40)
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
