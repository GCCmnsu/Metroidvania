<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.player_speed = 5;


global.checkpoint_x = x;
global.checkpoint_y = y;

global.player_lastx = x;
global.player_lasty = y;

global.player_health = 3
global.player_health_max = 3
global.player_iframes = 0  //number of invulnerability frames. 

// jumping related variables
global.player_vertical_speed = 0;
global.player_gravity = .4
global.player_isfalling = false
global.player_jump_height = 0;
global.player_jump_speed = -8;
global.player_doublejump = true // true if can doublejump
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.player_lastx = x;
global.player_lasty = y;

//decrement iframes
global.player_iframes = max(0,global.player_iframes - 1)

//spring code
if(collision_rectangle(x-8,y+3,x+8,y+3,Spring,true,false))
{
global.player_vertical_speed = -12;
}

//Apply gravity and movement
if global.player_isfalling
    {
    global.player_vertical_speed += global.player_gravity
    y += global.player_vertical_speed
    }


// check if hitting a ceiling
if global.player_vertical_speed &lt; 0
    {
    if(collision_rectangle(x-8,y-8,x+8,y-sprite_height+global.player_vertical_speed,Wall,true,false)) //check if ceiling above you
        {
        global.player_vertical_speed = 0
        while (!collision_rectangle(x-8,y-8,x+8,y-sprite_height-1,Wall,true,false))
              {
              y -= 1
              }
        }
    } 
    
//Checking for Fall code
if(collision_rectangle(x-8,y-6,x+8,y+global.player_vertical_speed,Wall,true,false)) //check if floor underneath you
    {
    if(global.player_isfalling)
        {
        //stop fall if floor underneath
        y = (collision_rectangle(x-8,y-6,x+8,y+global.player_vertical_speed,Wall,true,false)).y;
        global.player_vertical_speed = 0;
        global.player_doublejump = true;
        global.player_isfalling = false;
        }
    }
else
    {
    //set gravity to fall
    global.player_isfalling = true;
    }
    




//conveyor belts
if(collision_rectangle(x-8,y+1,x+8,y+1,Conveyor,true,false)) //check if conveyor underneath you
{
x += (collision_rectangle(x-8,y+1,x+8,y+1,Conveyor,true,false)).conveyor_rotation_speed;
}


//centers camera on player
view_xview[0] = x - (view_wview[0] / 2); 
view_yview[0] = y - (view_hview[0] / 2); 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="CheckPoint">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.checkpoint_x = other.x;
global.checkpoint_y = other.y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="39">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!collision_rectangle(x+8,y-1,x+(8+global.player_speed),y-32,Wall,false,false))
{
x+= global.player_speed;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="37">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!collision_rectangle(x-8,y-1,x-(8+global.player_speed),y-32,Wall,false,false))
{
x-= global.player_speed;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//reset draw alpha
draw_set_alpha(1)

//show player as transparent+red if invulnerable, else draw normal
if(global.player_iframes &gt; 0)                                              
    draw_sprite_ext(spr_Player,0,x,y,1,1,0,c_red,.7)
else
    draw_sprite_ext(spr_Player,0,x,y,1,1,0,c_white,1)



//draw health
var dx = 0;
repeat(global.player_health)
{
draw_sprite(spr_health,0,view_xview[0]+33+dx,view_yview[0]+10);
dx += 40
}


//draw fps
draw_text(view_xview[0],view_yview[0],"FPS: " + string(fps));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="68">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(Wall)
{
image_xscale = abs(image_xscale);
image_yscale = abs(image_yscale);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(collision_rectangle(x-8,y+3,x+8,y+3,Wall,true,false))
    {
    global.player_vertical_speed = global.player_jump_speed;
    global.player_isfalling = false
    y += global.player_jump_height;
    }
else
    {
    // check if doublejump
    if global.player_doublejump
        {
        global.player_isfalling = false
        global.player_doublejump = false;
        global.player_vertical_speed = global.player_jump_speed;
        y += global.player_jump_height;
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
